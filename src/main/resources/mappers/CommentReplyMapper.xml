<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sbm.mapper.CommentReplyMapper" >
    <resultMap id="BaseResultMap" type="com.sbm.pojo.model.CommentReply" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="comment_id" property="commentId" jdbcType="INTEGER" />
        <result column="reply_id" property="replyId" jdbcType="INTEGER" />
        <result column="reply_type" property="replyType" jdbcType="VARCHAR" />
        <result column="content" property="content" jdbcType="VARCHAR" />
        <result column="from_uid" property="fromUid" jdbcType="INTEGER" />
        <result column="to_uid" property="toUid" jdbcType="INTEGER" />
        <result column="picture_path" property="picturePath" jdbcType="VARCHAR" />
        <result column="video_path" property="videoPath" jdbcType="VARCHAR" />
        <result column="invalid" property="invalid" jdbcType="BIT" />
        <result column="invalid_be" property="invalidBe" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="add1" property="add1" jdbcType="VARCHAR" />
        <result column="add2" property="add2" jdbcType="VARCHAR" />
        <result column="add3" property="add3" jdbcType="VARCHAR" />
        <result column="like_count" property="likeCount" jdbcType="INTEGER" />
        <result column="rank" property="rank" jdbcType="INTEGER" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, comment_id, reply_id, reply_type, content, from_uid, to_uid, picture_path, video_path, 
        invalid, invalid_be, create_time, update_time, add1, add2, add3, like_count, rank
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sbm.pojo.model.CommentReplyExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <if test="includeColumns == null or includeColumns.size()==0 ">
			<include refid="Base_Column_List"/>
		</if>
		<if test="includeColumns!=null and includeColumns.size() > 0">
			<foreach collection="includeColumns" index="index" item="includeColumn" separator=",">
				${includeColumn}
			</foreach>
		</if>
        from comment_reply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
        <include refid="MySqlPaginationSuffix" />
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from comment_reply
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from comment_reply
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.sbm.pojo.model.CommentReplyExample" >
        delete from comment_reply
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.sbm.pojo.model.CommentReply" >
        insert into comment_reply (id, comment_id, reply_id, 
            reply_type, content, from_uid, 
            to_uid, picture_path, video_path, 
            invalid, invalid_be, create_time, 
            update_time, add1, add2, 
            add3, like_count, rank
            )
        values (#{id,jdbcType=INTEGER}, #{commentId,jdbcType=INTEGER}, #{replyId,jdbcType=INTEGER}, 
            #{replyType,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{fromUid,jdbcType=INTEGER}, 
            #{toUid,jdbcType=INTEGER}, #{picturePath,jdbcType=VARCHAR}, #{videoPath,jdbcType=VARCHAR}, 
            #{invalid,jdbcType=BIT}, #{invalidBe,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
            #{updateTime,jdbcType=TIMESTAMP}, #{add1,jdbcType=VARCHAR}, #{add2,jdbcType=VARCHAR}, 
            #{add3,jdbcType=VARCHAR}, #{likeCount,jdbcType=INTEGER}, #{rank,jdbcType=INTEGER}
            )
    </insert>
    <insert id="insertSelective" parameterType="com.sbm.pojo.model.CommentReply" >
        insert into comment_reply
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="commentId != null" >
                comment_id,
            </if>
            <if test="replyId != null" >
                reply_id,
            </if>
            <if test="replyType != null" >
                reply_type,
            </if>
            <if test="content != null" >
                content,
            </if>
            <if test="fromUid != null" >
                from_uid,
            </if>
            <if test="toUid != null" >
                to_uid,
            </if>
            <if test="picturePath != null" >
                picture_path,
            </if>
            <if test="videoPath != null" >
                video_path,
            </if>
            <if test="invalid != null" >
                invalid,
            </if>
            <if test="invalidBe != null" >
                invalid_be,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="add1 != null" >
                add1,
            </if>
            <if test="add2 != null" >
                add2,
            </if>
            <if test="add3 != null" >
                add3,
            </if>
            <if test="likeCount != null" >
                like_count,
            </if>
            <if test="rank != null" >
                rank,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="commentId != null" >
                #{commentId,jdbcType=INTEGER},
            </if>
            <if test="replyId != null" >
                #{replyId,jdbcType=INTEGER},
            </if>
            <if test="replyType != null" >
                #{replyType,jdbcType=VARCHAR},
            </if>
            <if test="content != null" >
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="fromUid != null" >
                #{fromUid,jdbcType=INTEGER},
            </if>
            <if test="toUid != null" >
                #{toUid,jdbcType=INTEGER},
            </if>
            <if test="picturePath != null" >
                #{picturePath,jdbcType=VARCHAR},
            </if>
            <if test="videoPath != null" >
                #{videoPath,jdbcType=VARCHAR},
            </if>
            <if test="invalid != null" >
                #{invalid,jdbcType=BIT},
            </if>
            <if test="invalidBe != null" >
                #{invalidBe,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="add1 != null" >
                #{add1,jdbcType=VARCHAR},
            </if>
            <if test="add2 != null" >
                #{add2,jdbcType=VARCHAR},
            </if>
            <if test="add3 != null" >
                #{add3,jdbcType=VARCHAR},
            </if>
            <if test="likeCount != null" >
                #{likeCount,jdbcType=INTEGER},
            </if>
            <if test="rank != null" >
                #{rank,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.sbm.pojo.model.CommentReplyExample" resultType="java.lang.Integer" >
        SELECT COUNT(1) FROM
        <if test="distinct" >
            (SELECT
          DISTINCT
          <include refid="Base_Column_List"/>
          from comment_reply
          <if test="_parameter != null">
              <include refid="Example_Where_Clause"/>
          </if>) AS COUNT_SQL
        </if>
        <if test="!distinct" >
            
          comment_reply
          <if test="_parameter != null" >
              <include refid="Example_Where_Clause" />
          </if>

        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update comment_reply
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.commentId != null" >
                comment_id = #{record.commentId,jdbcType=INTEGER},
            </if>
            <if test="record.replyId != null" >
                reply_id = #{record.replyId,jdbcType=INTEGER},
            </if>
            <if test="record.replyType != null" >
                reply_type = #{record.replyType,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null" >
                content = #{record.content,jdbcType=VARCHAR},
            </if>
            <if test="record.fromUid != null" >
                from_uid = #{record.fromUid,jdbcType=INTEGER},
            </if>
            <if test="record.toUid != null" >
                to_uid = #{record.toUid,jdbcType=INTEGER},
            </if>
            <if test="record.picturePath != null" >
                picture_path = #{record.picturePath,jdbcType=VARCHAR},
            </if>
            <if test="record.videoPath != null" >
                video_path = #{record.videoPath,jdbcType=VARCHAR},
            </if>
            <if test="record.invalid != null" >
                invalid = #{record.invalid,jdbcType=BIT},
            </if>
            <if test="record.invalidBe != null" >
                invalid_be = #{record.invalidBe,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.add1 != null" >
                add1 = #{record.add1,jdbcType=VARCHAR},
            </if>
            <if test="record.add2 != null" >
                add2 = #{record.add2,jdbcType=VARCHAR},
            </if>
            <if test="record.add3 != null" >
                add3 = #{record.add3,jdbcType=VARCHAR},
            </if>
            <if test="record.likeCount != null" >
                like_count = #{record.likeCount,jdbcType=INTEGER},
            </if>
            <if test="record.rank != null" >
                rank = #{record.rank,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update comment_reply
        set id = #{record.id,jdbcType=INTEGER},
            comment_id = #{record.commentId,jdbcType=INTEGER},
            reply_id = #{record.replyId,jdbcType=INTEGER},
            reply_type = #{record.replyType,jdbcType=VARCHAR},
            content = #{record.content,jdbcType=VARCHAR},
            from_uid = #{record.fromUid,jdbcType=INTEGER},
            to_uid = #{record.toUid,jdbcType=INTEGER},
            picture_path = #{record.picturePath,jdbcType=VARCHAR},
            video_path = #{record.videoPath,jdbcType=VARCHAR},
            invalid = #{record.invalid,jdbcType=BIT},
            invalid_be = #{record.invalidBe,jdbcType=VARCHAR},
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            add1 = #{record.add1,jdbcType=VARCHAR},
            add2 = #{record.add2,jdbcType=VARCHAR},
            add3 = #{record.add3,jdbcType=VARCHAR},
            like_count = #{record.likeCount,jdbcType=INTEGER},
            rank = #{record.rank,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.sbm.pojo.model.CommentReply" >
        update comment_reply
        <set >
            <if test="commentId != null" >
                comment_id = #{commentId,jdbcType=INTEGER},
            </if>
            <if test="replyId != null" >
                reply_id = #{replyId,jdbcType=INTEGER},
            </if>
            <if test="replyType != null" >
                reply_type = #{replyType,jdbcType=VARCHAR},
            </if>
            <if test="content != null" >
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="fromUid != null" >
                from_uid = #{fromUid,jdbcType=INTEGER},
            </if>
            <if test="toUid != null" >
                to_uid = #{toUid,jdbcType=INTEGER},
            </if>
            <if test="picturePath != null" >
                picture_path = #{picturePath,jdbcType=VARCHAR},
            </if>
            <if test="videoPath != null" >
                video_path = #{videoPath,jdbcType=VARCHAR},
            </if>
            <if test="invalid != null" >
                invalid = #{invalid,jdbcType=BIT},
            </if>
            <if test="invalidBe != null" >
                invalid_be = #{invalidBe,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="add1 != null" >
                add1 = #{add1,jdbcType=VARCHAR},
            </if>
            <if test="add2 != null" >
                add2 = #{add2,jdbcType=VARCHAR},
            </if>
            <if test="add3 != null" >
                add3 = #{add3,jdbcType=VARCHAR},
            </if>
            <if test="likeCount != null" >
                like_count = #{likeCount,jdbcType=INTEGER},
            </if>
            <if test="rank != null" >
                rank = #{rank,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sbm.pojo.model.CommentReply" >
        update comment_reply
        set comment_id = #{commentId,jdbcType=INTEGER},
            reply_id = #{replyId,jdbcType=INTEGER},
            reply_type = #{replyType,jdbcType=VARCHAR},
            content = #{content,jdbcType=VARCHAR},
            from_uid = #{fromUid,jdbcType=INTEGER},
            to_uid = #{toUid,jdbcType=INTEGER},
            picture_path = #{picturePath,jdbcType=VARCHAR},
            video_path = #{videoPath,jdbcType=VARCHAR},
            invalid = #{invalid,jdbcType=BIT},
            invalid_be = #{invalidBe,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            update_time = #{updateTime,jdbcType=TIMESTAMP},
            add1 = #{add1,jdbcType=VARCHAR},
            add2 = #{add2,jdbcType=VARCHAR},
            add3 = #{add3,jdbcType=VARCHAR},
            like_count = #{likeCount,jdbcType=INTEGER},
            rank = #{rank,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <sql id="MySqlPaginationSuffix" >
        <if test="page != null" >
            <![CDATA[ LIMIT #{page.pageSize} OFFSET #{page.recordIndex}]]>
        </if>
    </sql>
    <select id="selectOneByExample" resultMap="BaseResultMap" parameterType="com.sbm.pojo.model.CommentReplyExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <if test="includeColumns == null or includeColumns.size()==0" >
      <include refid="Base_Column_List" />
    </if>
    <if test="includeColumns!=null and includeColumns.size() > 0" >
      <foreach collection="includeColumns" index="index" item="includeColumn" separator="," >
        ${includeColumn}
      </foreach>
    </if>
         from comment_reply
        <if test="_parameter != null" >
     <include refid="Example_Where_Clause" />
     </if>
        <if test="orderByClause != null" >
     order by ${orderByClause}
     </if>
        LIMIT 1 OFFSET 0
    </select>
</mapper>